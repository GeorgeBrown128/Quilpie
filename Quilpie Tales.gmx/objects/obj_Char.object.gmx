<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_Char</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable Initialization
stationaryFrameStart = 0;
stationaryFrameEnd = 2;
rightFrameStart = 3;
rightFrameEnd = 14;
leftFrameStart = 15;
leftFrameEnd = 26;
isMoving = false;
movDirection = 0;
image_speed = 0;
// No Movement (0), Right (1), Left(2), Down(3), Up(4)
canInteract = false;
movementAxisVal = -4700;
movementSpeed = 10;
currentObject = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increasing Animation Frames
//Alter the FrameStart and FrameEnd values in the "Create" action to increase/decrease the number of frames in the movement animation.
switch (movDirection)
    {
    case 0:
        if (image_index &lt; stationaryFrameStart || image_index &gt; stationaryFrameEnd)
        {
            image_index = stationaryFrameStart;
        }
        if (image_index == stationaryFrameStart)
        {
            image_index = image_index + 1;
        }
        else if (image_index &gt; stationaryFrameStart)
        { 
            if (image_index &lt; stationaryFrameEnd)
            {   
                image_index = image_index + 1;
            }
            else if (image_index == stationaryFrameEnd)
            {
                image_index = stationaryFrameStart;
            }
        }
        break;
    case 1:
        if (image_index &lt; rightFrameStart || image_index &gt; rightFrameEnd)
        {
            image_index = rightFrameStart;
        }
        if (image_index == rightFrameStart)
        {
            image_index = image_index + 1;
        }
        else if (image_index &gt; rightFrameStart)
        { 
            if (image_index &lt; rightFrameEnd)
            {   
                image_index = image_index + 1;
            }
            else if (image_index == rightFrameEnd)
            {
                image_index = rightFrameStart;
            }
        }
        break;
    case 2:
        if (image_index &lt; leftFrameStart || image_index &gt; leftFrameEnd)
        {
            image_index = leftFrameStart;
        }
        if (image_index == leftFrameStart)
        {
            image_index = image_index + 1;
        }
        else if (image_index &gt; leftFrameStart)
        { 
            if (image_index &lt; leftFrameEnd)
            {   
                image_index = image_index + 1;
            }
            else if (image_index == leftFrameEnd)
            {
                image_index = leftFrameStart;
            }
        }
        break;
    case 3:
    
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement  
    switch (movDirection)
    {
    case 0:
        //Movement while stationary
        background_hspeed[0] = 0;
        background_hspeed[1] = 0; 
        background_hspeed[2] = 0;
        background_hspeed[3] = 0;
        background_hspeed[4] = 0;
        break;
    case 1:
        if (movementAxisVal &gt; -4780) {
            //Right Direction Movement
            background_hspeed[0] = (-movementSpeed/5);
            background_hspeed[1] = (-movementSpeed/3);
            background_hspeed[2] = (-movementSpeed/2);
            background_hspeed[3] = -movementSpeed;
            background_hspeed[4] = -movementSpeed;
            movementAxisVal -= movementSpeed;
        }
        else {
            background_hspeed[0] = 0;
            background_hspeed[1] = 0;
            background_hspeed[2] = 0;
            background_hspeed[3] = 0;
            background_hspeed[4] = 0;
        }
        break;
    case 2:
    if (movementAxisVal &lt; 0) {
            //Left Direction Movement
            background_hspeed[0] = (movementSpeed/5);
            background_hspeed[1] = (movementSpeed/3); //Scrolls the Background
            background_hspeed[2] = (movementSpeed/2);
            background_hspeed[3] = movementSpeed;
            background_hspeed[4] = movementSpeed;
            movementAxisVal += movementSpeed;
        }
        else {
            background_hspeed[0] = 0;
            background_hspeed[1] = 0;
            background_hspeed[2] = 0;
            background_hspeed[3] = 0;
            background_hspeed[4] = 0;
        }
        break;
    };
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check all collisions

if (obj_Mineshaft.instMineshaft != noone) { }
else { if (obj_PopSign.instPopSign != noone) { } 
    else { if (obj_BookStand.instBookStand != noone) { } 
        else { if (obj_Bed.instBed != noone) { }
            else { if (obj_Serena.instSerena != noone) { }
                else { if (obj_LetterBox.instLetterBox != noone) { }
                    else {
currentObject = 0;
with(obj_TextMineshaft) { instance_destroy(); }
with(obj_TextPopSign) { instance_destroy(); }
with(obj_TextBookStand) { instance_destroy(); }
with(obj_TextBed) { instance_destroy(); }
with(obj_TextBox) { instance_destroy(); }
with(obj_TextBoxLarge) { instance_destroy(); }
with(obj_TextSerena) { instance_destroy(); }
with(obj_SerenaLargeBox) { instance_destroy(); }
with(obj_letter1) { instance_destroy(); }
}}}}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movDirection = 1;
isMoving = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isMoving = true;
movDirection = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (currentObject)
{
    case 0: //Nothing
        break;
    case 1: //Mineshaft
        room_goto(rm_Cave);
        break;
    case 2: //Shop
    //Purchase Bird Code
    
        break;
    case 3: //Population Sign
        draw_set_font(font0);
        instance_create(64,64,obj_TextBox);
        instance_create(128,128,obj_TextPopSign);
        break;
    case 4: //Mailbox
        instance_create(0,0,obj_letter1);
        break;
    case 5: //Book
        draw_set_font(font_BookStand);
        instance_create(96,32,obj_TextBoxLarge);
        break
    case 6: //Picture of Serena Williams
        draw_set_font(font_Serena);
        instance_create(96,96,obj_SerenaLargeBox);
        instance_create(0,0,obj_TextSerena);
        break;
    case 7: //Bed
        draw_set_font(font0);
        instance_create(80,32,obj_TextBox);
        instance_create(0,0,obj_TextBed);
        break;
    case 8: //Shop: Drill
    //Purchase Drill Code
    
        break;
    case 9: //Shop: Laser
    //Purchase Laser Code
    
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isMoving = 0;
movDirection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isMoving = 0;
movDirection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>200,200</point>
  </PhysicsShapePoints>
</object>

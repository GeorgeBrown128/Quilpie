<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Opal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init Variables
mined = false;
startPos = x;
startAngela = image_angle;
rockWobble = false;
timesClicked = 0;
bounceCount = 0;
stopped = false;
soundPlayed = false; //If the Falling sound has been played set to true
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop rock wobbling for this click trigger.
rockWobble = false;
timesClicked++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wobble the rock or make it drop.

// If wobbling.
if (rockWobble == true){
    if((mined == false) &amp;&amp; (alarm[0] != 0)){
        x = x + random_range(-2, 2);
        image_angle = image_angle + random_range(-1,1);
    }
}
// Undo the wobble action until 3 clicks.
else if(!rockWobble &amp;&amp; (timesClicked &lt;= 2)){
        x = startPos;
        image_angle = 0;
}

// 3 clicks -&gt; drop to the floor.
if (timesClicked &gt;= 3){
    
    // Stop if 
    if (bounceCount == 3){
        vspeed = 0;
        hspeed = 0;
        y = room_height - 144;
        stopped = true;
    }
    else{
        // Apply gravity.
        vspeed += 0.5;
    }
    if (soundPlayed == false){
        audio_play_sound(OpalFall,1,false);
        soundPlayed = true;
    }
    
    // If the rock hits the screen edge.
    if ((y &gt; (room_height - 144)) &amp;&amp; bounceCount !=3){
        audio_play_sound(OpalBounce,1,false);
        // Throw it upwards.
        vspeed *= -0.3;
        // Ensure we're outside the box.
        y = room_height - 144;
        if(bounceCount == 0){
            hspeed = random_range(0.75*vspeed, 1.25*vspeed)
            if (image_angle &lt; 0.00) // if rock is leaning left bounce left
            {
                hspeed *= -1;
            };
            
        }
        //image_angle = -15;
        hspeed *= 0.5;
        // Count this bounce.
        bounceCount++;
    }
}

//Fade text out
if (timesClicked == 3){
    Obj_IntroText3.image_alpha -= 0.01;
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Opal Fading in
if (Obj_FadeToBlack.opalFadedIn == false){
    image_alpha += 0.01;
    if (image_alpha == 1.00){
        Obj_FadeToBlack.opalFadedIn = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the rock wobbling.
if((timesClicked &lt; 3) &amp;&amp; !rockWobble){
    alarm[0] = 15;
    rockWobble = true;
    audio_play_sound(OpalClick,1,false);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.300000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>384,0</point>
    <point>384,288</point>
  </PhysicsShapePoints>
</object>
